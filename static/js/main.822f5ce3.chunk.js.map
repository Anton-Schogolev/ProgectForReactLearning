{"version":3,"sources":["p2-homeworks/h3/Greeting.module.css","p2-homeworks/h4/common/c3-SuperCheckbox/SuperCheckbox.module.css","p2-homeworks/h4/common/c2-SuperButton/SuperButton.module.css","p1-main/m1-ui/u1-app/App.module.css","p2-homeworks/h4/HW4.module.css","p2-homeworks/h5/Header.tsx","p2-homeworks/h1/Message.tsx","p2-homeworks/h1/HW1.tsx","p2-homeworks/h2/Affair.tsx","p2-homeworks/h2/Affairs.tsx","p2-homeworks/h2/HW2.tsx","p2-homeworks/h4/common/c1-SuperInputText/SuperInputText.tsx","p2-homeworks/h4/common/c2-SuperButton/SuperButton.tsx","p2-homeworks/h3/Greeting.tsx","p2-homeworks/h3/GreetingContainer.tsx","p2-homeworks/h3/HW3.tsx","p2-homeworks/h4/common/c3-SuperCheckbox/SuperCheckbox.tsx","p2-homeworks/h4/HW4.tsx","p2-homeworks/h5/pages/PreJunior.tsx","p2-homeworks/h5/pages/Error404.tsx","p2-homeworks/h5/Routes.tsx","p2-homeworks/h5/HW5.tsx","p1-main/m1-ui/u1-app/App.tsx","serviceWorker.ts","index.tsx","p2-homeworks/h4/common/c1-SuperInputText/SuperInputText.module.css","p2-homeworks/h1/Message.module.css"],"names":["module","exports","Header","Message","props","className","s","container","src","avatar","width","messageBlue","name","messageContent","message","messageTimestampRight","time","messageData","HW1","Affair","affair","onClick","deleteAffairCallback","_id","Affairs","mappedAffairs","data","map","a","key","setFilter","defaultAffairs","priority","HW2","useState","affairs","setAffairs","filter","filteredAffairs","aff","filterAffairs","deleteAffair","SuperInputText","type","onChange","onChangeText","onKeyPress","onEnter","error","spanClassName","label","restProps","labelClass","errorInput","inp","htmlFor","id","placeholder","e","currentTarget","value","errorL","focusBg","SuperButton","red","finalClassName","super","Greeting","setNameCallback","addUser","totalUsers","someClass","flex","GreetingContainer","users","addUserCallback","setName","setError","length","trim","alert","HW3","setUsers","v1","SuperCheckbox","onChangeChecked","children","finalInputClassName","checkbox","finalSpanClassName","checked","line","span","HW4","text","setText","showAlert","setChecked","column","PreJunior","Error404","PATH","Junior","Routes","path","exact","render","to","HW5","App","Boolean","window","location","hostname","match","ReactDOM","StrictMode","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister","catch","console"],"mappings":"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","file":"static/js/main.822f5ce3.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"someClass\":\"Greeting_someClass__2iLK8\",\"error\":\"Greeting_error__2bb79\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"checkbox\":\"SuperCheckbox_checkbox__2ZSHo\",\"span\":\"SuperCheckbox_span__3IJub\",\"line\":\"SuperCheckbox_line__1ykCp\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"super\":\"SuperButton_super__32T5F\",\"red\":\"SuperButton_red__2yw7L\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"App\":\"App_App__1Janl\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"blue\":\"HW4_blue__3inBm\",\"column\":\"HW4_column__1CNt8\"};","import React from \"react\";\n\nfunction Header() {\n    return (\n        <div>\n            // add NavLinks\n\n        </div>\n    );\n}\n\nexport default Header;\n","import React from \"react\";\nimport s from \"./Message.module.css\"\n\ntype PropsType = {\n    avatar: string\n    name: string\n    message: string\n    time: string\n}\n\nfunction Message(props:PropsType) {\n    return (\n        <div className={s.container}>\n            <img  src={props.avatar} width={\"50px\"} />\n            <div className={s.messageBlue}>\n                <p className={s.name}>{props.name}</p>\n                <p className={s.messageContent}>{props.message}</p>\n                <p className={s.messageTimestampRight}>{props.time}</p>\n            </div>\n        </div>\n    );\n}\n\nexport default Message;\n","import React from \"react\";\nimport Message from \"./Message\";\n\nconst messageData = {\n    avatar: \"https://sun9-74.userapi.com/Ph-WiuOtF985il9AvN9JqiCWedmHtSGSSTXrSA/ltEB2Z2-YO4.jpg\",\n    name: \"Some Name\",\n    message: \"Please, don't use 12345678 as a password it's very insecure \",\n    time: \"22:00\",\n};\n\nfunction HW1() {\n    return (\n        <div>\n            <hr/>\n            homeworks 1\n\n            should work (должно работать)\n\n            <Message\n                avatar={messageData.avatar}\n                name={messageData.name}\n                message={messageData.message}\n                time={messageData.time}\n            />\n\n            <hr/>\n            {/*для личного творчества, могу проверить*/}\n            {/*<AlternativeMessage/>*/}\n            <hr/>\n        </div>\n    );\n}\n\nexport default HW1;\n","import React from \"react\";\nimport {AffairType} from \"./HW2\";\n\ntype AffairPropsType = {\n    // key не нужно типизировать\n    affair: AffairType // need to fix any\n    deleteAffairCallback:(_id:number)=>void// need to fix any\n}\n\nfunction Affair(props: AffairPropsType) {\n    const deleteCallback = () => {props.deleteAffairCallback(props.affair._id)};// need to fix\n\n    return (\n        <div>\n            {props.affair.name}\n\n            <button onClick={deleteCallback}>X</button>\n        </div>\n    );\n}\n\nexport default Affair;\n","import React from \"react\";\nimport Affair from \"./Affair\";\nimport {AffairType, FilterType} from \"./HW2\";\n\ntype AffairsPropsType = { // need to fix any\n    data: Array<AffairType>\n    setFilter: (filter:FilterType)=> void\n    deleteAffairCallback: (_id:number)=>void\n}\n\nfunction Affairs(props: AffairsPropsType) {\n    const mappedAffairs = props.data.map((a: AffairType) => (\n        <Affair // should work\n            key={a._id} // кеи ОБЯЗАТЕЛЬНЫ в 99% - так что лучше их писать всегда при создании компонент в мапе\n            affair={a}\n            deleteAffairCallback={props.deleteAffairCallback}\n        />\n    ))\n    const setAll = () => {props.setFilter(\"all\")}; // need to fix\n    const setHigh = () => {props.setFilter(\"high\")};\n    const setMiddle = () => {props.setFilter(\"middle\")};\n    const setLow = () => {props.setFilter(\"low\")};\n\n    return (\n        <div>\n\n            {mappedAffairs}\n\n            <button onClick={setAll}>All</button>\n            <button onClick={setHigh}>High</button>\n            <button onClick={setMiddle}>Middle</button>\n            <button onClick={setLow}>Low</button>\n        </div>\n    );\n}\n\nexport default Affairs;\n","import React, {useState} from \"react\";\nimport Affairs from \"./Affairs\";\n\n// types\nexport type AffairPriorityType = \"high\"|\"middle\"|\"low\";\nexport type AffairType = {\n    _id:number\n    name:string\n    priority:AffairPriorityType\n};\nexport type FilterType = \"all\" | AffairPriorityType;\n\n\nconst defaultAffairs: Array<AffairType> = [\n    {_id: 1, name: \"React\", priority: \"high\"},\n    {_id: 2, name: \"anime\", priority: \"middle\"},\n    {_id: 3, name: \"games\", priority: \"middle\"},\n    {_id: 4, name: \"work\", priority: \"high\"},\n    {_id: 5, name: \"html & css\", priority: \"middle\"},\n    {_id: 6, name: \"dream\", priority: \"low\"},\n];\n\n// pure helper functions\nexport const filterAffairs = (affairs: Array<AffairType>, filter: FilterType): Array<AffairType> => { // need to fix any\n    if (filter === \"all\") return affairs;\n    else return affairs.filter(aff=>aff.priority===filter); // need to fix\n}\nexport const deleteAffair = (affairs: Array<AffairType>, _id: number): Array<AffairType> => { // need to fix any\n    return affairs.filter(aff=>aff._id!==_id); // need to fix\n}\n\n\nfunction HW2() {\n    const [affairs, setAffairs] = useState<Array<AffairType>>(defaultAffairs); // need to fix any\n    const [filter, setFilter] = useState<FilterType>(\"all\");\n\n    const filteredAffairs = filterAffairs(affairs, filter);\n    const deleteAffairCallback = (_id: number) => setAffairs(deleteAffair(affairs, _id)); // need to fix any\n\n    return (\n        <div>\n            <hr/>\n            homeworks 2\n\n            {/*should work (должно работать)*/}\n            <Affairs\n                data={filteredAffairs}\n                setFilter={setFilter}\n                deleteAffairCallback={deleteAffairCallback}\n            />\n\n            <hr/>\n            {/*для личного творчества, могу проверить*/}\n            {/*<AlternativeAffairs/>*/}\n            <hr/>\n        </div>\n    );\n}\n\nexport default HW2;\n","import React, {ChangeEvent, DetailedHTMLProps, InputHTMLAttributes, KeyboardEvent} from \"react\";\nimport s from \"./SuperInputText.module.css\";\n\n// тип пропсов обычного инпута\ntype DefaultInputPropsType = DetailedHTMLProps<InputHTMLAttributes<HTMLInputElement>, HTMLInputElement>;\n\n// здесь мы говорим что у нашего инпута будут такие же пропсы как у обычного инпута\n// (чтоб не писать value: string, onChange: ...; они уже все описаны в DefaultInputPropsType)\ntype SuperInputTextPropsType = DefaultInputPropsType & { // и + ещё пропсы которых нет в стандартном инпуте\n    onChangeText?: (value: string) => void\n    onEnter?: () => void\n    error?: string\n    spanClassName?: string\n    label?: string\n};\n\nconst SuperInputText: React.FC<SuperInputTextPropsType> = (\n    {\n        type, // достаём и игнорируем чтоб нельзя было задать другой тип инпута\n        onChange, onChangeText,\n        onKeyPress, onEnter,\n        error,\n        className, spanClassName,\n        label,\n\n        ...restProps// все остальные пропсы попадут в объект restProps\n    }\n) => {\n    const onChangeCallback = (e: ChangeEvent<HTMLInputElement>) => {\n        onChange // если есть пропс onChange\n        && onChange(e); // то передать ему е (поскольку onChange не обязателен)\n\n        onChangeText && onChangeText(e.currentTarget.value);\n    }\n    const onKeyPressCallback = (e: KeyboardEvent<HTMLInputElement>) => {\n        onKeyPress && onKeyPress(e);\n\n        e.key === \"Enter\" // если нажата кнопка Enter\n        && onEnter // и есть пропс onEnter\n        && onEnter(); // то вызвать его\n    }\n    const finalSpanClassName = `${s.error} ${spanClassName ? spanClassName : \"\"}`;\n\n    const finalInputClassName = `${error ? s.errorInput : className}`; // need to fix with (?:) and s.superInput\n    const labelClass = `${s.inp} ${className ? className : \"\"}`\n    label = label ? label : \"Input\"\n    return (\n        <>\n            {/*{className ? <>*/}\n            {/*        <input*/}\n            {/*            type={\"text\"}*/}\n            {/*            onChange={onChangeCallback}*/}\n            {/*            onKeyPress={onKeyPressCallback}*/}\n            {/*            className={finalInputClassName}*/}\n\n            {/*            {...restProps} // отдаём инпуту остальные пропсы если они есть (value например там внутри)*/}\n            {/*        />*/}\n            {/*        {error && <span className={finalSpanClassName}>{error}</span>}*/}\n            {/*    </> :*/}\n                <label htmlFor=\"inp\" className={labelClass}>\n                    <input\n                        type=\"text\"\n                        id=\"inp\"\n                        placeholder=\"&nbsp;\"\n                        onChange={onChangeCallback}\n                        onKeyPress={onKeyPressCallback}\n                        {...restProps}\n                        className={error ? s.errorL : \"\"}\n                    />\n                    <span className={error ? `${s.errorL} ${s.label}` : s.label}>{error ? error : label}</span>\n                    <span className={s.focusBg}></span>\n                </label>\n                {/*}*/}\n        </>\n    );\n}\n\nexport default SuperInputText;\n","import React, {ButtonHTMLAttributes, DetailedHTMLProps} from \"react\";\nimport s from \"./SuperButton.module.css\";\n\n// тип пропсов обычной кнопки, children в котором храниться название кнопки там уже описан\ntype DefaultButtonPropsType = DetailedHTMLProps<ButtonHTMLAttributes<HTMLButtonElement>, HTMLButtonElement>;\n\ntype SuperButtonPropsType = DefaultButtonPropsType & {\n    red?: boolean\n}\n\nconst SuperButton: React.FC<SuperButtonPropsType> = (\n    {\n        red, className,\n        ...restProps// все остальные пропсы попадут в объект restProps, там же будет children\n    }\n) => {\n    const finalClassName = `${red ? s.red : \"\"} ${className} ${s.super}`;\n\n    return (\n        <button\n            className={finalClassName}\n            {...restProps} // отдаём кнопке остальные пропсы если они есть (children там внутри)\n        />\n    );\n}\n\nexport default SuperButton;\n","import React, {ChangeEvent} from \"react\";\nimport s from \"./Greeting.module.css\";\nimport SuperInputText from \"../h4/common/c1-SuperInputText/SuperInputText\";\nimport SuperButton from \"../h4/common/c2-SuperButton/SuperButton\";\n\ntype GreetingPropsType = {\n    name: string // need to fix any\n    setNameCallback: (e: ChangeEvent<HTMLInputElement>) => void // need to fix any\n    addUser: () => void // need to fix any\n    error: string // need to fix any\n    totalUsers: number // need to fix any\n}\n\n// презентационная компонента (для верстальщика)\nconst Greeting: React.FC<GreetingPropsType> = (\n    {name, setNameCallback, addUser, error, totalUsers} // деструктуризация пропсов\n) => {\n    const inputClass = error !== \"\" ? s.error : s.someClass; // need to fix with (?:)\n\n    return (\n        <div className={s.flex}>\n            <SuperInputText\n                value={name}\n                onChange={setNameCallback}\n                onEnter={addUser}\n                error={error}\n                label={\"Name\"}\n            />\n            <SuperButton onClick={addUser}>add</SuperButton>\n            <span> {totalUsers}</span>\n        </div>\n    );\n}\n\nexport default Greeting;\n","import React, {ChangeEvent, useState} from \"react\";\nimport Greeting from \"./Greeting\";\nimport {UserType} from \"./HW3\";\n\ntype GreetingContainerPropsType = {\n    users: Array<UserType>\n    addUserCallback: (name: string) => void\n}\n\n// более простой и понятный для новичков\n// function GreetingContainer(props: GreetingPropsType) {\n\n// более современный и удобный для про :)\n// уровень локальной логики\nconst GreetingContainer: React.FC<GreetingContainerPropsType> = ({users, addUserCallback}) => { // деструктуризация пропсов\n    const [name, setName] = useState<string>(\"\"); // need to fix any\n    const [error, setError] = useState<string>(\"\"); // need to fix any\n\n    const setNameCallback = (e: ChangeEvent<HTMLInputElement>) => { // need to fix any\n        setName(e.currentTarget.value); // need to fix\n        setError(\"\")\n    };\n    const addUser = () => {\n        if (name.trim() === \"\") {\n            setError(\" String is empty! \")\n        } else {\n            alert(`Hello  ${name}!`); // need to fix\n            addUserCallback(name)\n            setName(\"\")\n            setError(\"\")\n        }\n    };\n\n    let totalUsers=users.length\n\n    return (\n        <Greeting\n            name={name}\n            setNameCallback={setNameCallback}\n            addUser={addUser}\n            error={error}\n            totalUsers={totalUsers}\n        />\n    );\n}\n\nexport default GreetingContainer;\n","import React, {useState} from \"react\";\nimport GreetingContainer from \"./GreetingContainer\";\nimport {v1} from \"uuid\";\n\n// types\nexport type UserType = {\n    _id: string // need to fix any\n    name: string // need to fix any\n}\n\n// уровень работы с глобальными данными\nfunction HW3() {\n    const [users, setUsers] = useState<Array<UserType>>([]); // need to fix any\n\n    const addUserCallback = (name: string) => {\n        setUsers([{_id: v1(), name: name}, ...users]);\n    }\n\n    return (\n        <div>\n            <hr/>\n            homeworks 3\n\n            {/*should work (должно работать)*/}\n            <GreetingContainer users={users} addUserCallback={addUserCallback}/>\n\n            <hr/>\n            {/*для личного творчества, могу проверить*/}\n            {/*<AlternativeGreeting/>*/}\n            <hr/>\n        </div>\n    );\n}\n\nexport default HW3;\n","import React, {ChangeEvent, DetailedHTMLProps, InputHTMLAttributes} from \"react\";\nimport s from \"./SuperCheckbox.module.css\";\n\n// тип пропсов обычного инпута\ntype DefaultInputPropsType = DetailedHTMLProps<InputHTMLAttributes<HTMLInputElement>, HTMLInputElement>;\n\ntype SuperCheckboxPropsType = DefaultInputPropsType & {\n    onChangeChecked?: (checked: boolean) => void\n    spanClassName?: string\n};\n\nconst SuperCheckbox: React.FC<SuperCheckboxPropsType> = (\n    {\n        type, // достаём и игнорируем чтоб нельзя было задать другой тип инпута\n        onChange, onChangeChecked,\n        className, spanClassName,\n        children, // в эту переменную попадёт текст, типизировать не нужно так как он затипизирован в React.FC\n\n        ...restProps// все остальные пропсы попадут в объект restProps\n    }\n) => {\n    const onChangeCallback = (e: ChangeEvent<HTMLInputElement>) => {\n        onChangeChecked && onChangeChecked(e.currentTarget.checked)\n        onChange && onChange(e)\n    }\n\n    const finalInputClassName = `${s.checkbox} ${className ? className : \"\"}`;\n    const finalSpanClassName = `${!restProps.checked?s.span:s.line}`\n    return (\n        <label>\n            <input\n                type=\"checkbox\"\n                id=\"todo\"\n                name=\"todo\"\n                value=\"todo\"\n                onChange={onChangeCallback}\n                className={finalInputClassName}\n                checked={restProps.checked}\n\n                {...restProps}\n            />\n            {/*<input*/}\n            {/*    type={\"checkbox\"}*/}\n            {/*    onChange={onChangeCallback}*/}\n            {/*    className={finalInputClassName}*/}\n            {/*    checked={restProps.checked}*/}\n\n            {/*    {...restProps} // отдаём инпуту остальные пропсы если они есть (checked например там внутри)*/}\n            {/*/>*/}\n            {children && <span className={finalSpanClassName}>{children}</span>}\n        </label> // благодаря label нажатие на спан передастся в инпут\n    );\n}\n\nexport default SuperCheckbox;\n","import React, {ChangeEvent, useState} from \"react\";\nimport SuperInputText from \"./common/c1-SuperInputText/SuperInputText\";\nimport s from \"./HW4.module.css\";\nimport SuperButton from \"./common/c2-SuperButton/SuperButton\";\nimport SuperCheckbox from \"./common/c3-SuperCheckbox/SuperCheckbox\";\n\nfunction HW4() {\n    const [text, setText] = useState<string>(\"\");\n    const error = text ? \"\" : \"Error\";\n    const showAlert = () => {\n        if (error) {\n            alert(\"введите текст...\");\n        } else {\n            alert(text); // если нет ошибки показать текст\n        }\n    }\n\n    const [checked, setChecked] = useState<boolean>(false);\n    const testOnChange = (e: ChangeEvent<HTMLInputElement>) => setChecked(e.currentTarget.checked);\n\n    return (\n        <div>\n            <hr/>\n            homeworks 4\n\n            <div className={s.column}>\n                {/*should work (должно работать)*/}\n                <SuperInputText\n                    value={text}\n                    onChangeText={setText}\n                    onEnter={showAlert}\n                    error={error}\n                    // className={s.blue} // проверьте, рабоет ли смешивание классов\n                />\n\n                {/*should work (должно работать)*/}\n                <SuperButton\n                    red // пропсу с булевым значением не обязательно указывать true\n                    onClick={showAlert}\n                >\n                    delete {/*// название кнопки попадёт в children*/}\n                </SuperButton>\n\n                {/*should work (должно работать)*/}\n                <SuperCheckbox\n                    checked={checked}\n                    onChangeChecked={setChecked}\n                >\n                    some text {/*// этот текст попадёт в children*/}\n                </SuperCheckbox>\n\n                {/*// onChange тоже должен работать*/}\n                <SuperCheckbox checked={checked} onChange={testOnChange}/>\n            </div>\n\n            <hr/>\n            {/*для личного творчества, могу проверить*/}\n            {/*<AlternativeSuperInputText/>*/}\n            {/*<AlternativeSuperButton/>*/}\n            {/*<AlternativeSuperCheckbox/>*/}\n            <hr/>\n        </div>\n    );\n}\n\nexport default HW4;\n","import React from \"react\";\nimport HW1 from \"../../h1/HW1\";\nimport HW2 from \"../../h2/HW2\";\nimport HW3 from \"../../h3/HW3\";\nimport HW4 from \"../../h4/HW4\";\n\nfunction PreJunior() {\n    return (\n        <div>\n            <HW1/>\n            <HW2/>\n            <HW3/>\n            <HW4/>\n            {/*<HW6/>*/}\n\n        </div>\n    );\n}\n\nexport default PreJunior;\n\n// сделайте по аналогии пустые страницы джун и джун+\n// туда будут добавляться следующие дз","import React from \"react\";\n\nfunction Error404() {\n    return (\n        <div>\n            <div>404</div>\n            <div>Page not found!</div>\n            <div>—ฅ/ᐠ.̫ .ᐟ\\ฅ—</div>\n        </div>\n    );\n}\n\nexport default Error404;\n","import React from \"react\";\nimport { Switch, Route, Redirect } from \"react-router-dom\";\nimport PreJunior from \"./pages/PreJunior\";\nimport Error404 from \"./pages/Error404\";\n\nexport const PATH = {\n    PRE_JUNIOR: \"/pre-junior\",\n    JUNIOR: \"/junior\"\n    // add paths\n}\n\nconst Junior = () => {\n    return <></>\n}\nfunction Routes() {\n    return (\n        <div>\n            {/*Switch выбирает первый подходящий роут*/}\n            <Switch>\n\n            {/*в начале мы попадаем на страницу \"/\" и переходим сразу на страницу PRE_JUNIOR*/}\n            {/*exact нужен чтоб указать полное совподение (что после \"/\" ничего не будет)*/}\n            <Route path={\"/\"} exact render={() => <Redirect to={PATH.PRE_JUNIOR}/>}/>\n\n            <Route path={PATH.PRE_JUNIOR} render={() => <PreJunior/>}/>\n            <Route path={PATH.JUNIOR} render={() => <Junior/>}/>\n                {/*// add routes*/}\n\n            {/*у этого роута нет пути, он отрисуется если пользователь захочет попасть на несуществующую страницу*/}\n            <Route render={() => <Error404/>}/>\n\n            </Switch>\n        </div>\n    );\n}\n\nexport default Routes;\n","import React from \"react\";\nimport Header from \"./Header\";\nimport Routes from \"./Routes\";\nimport {HashRouter} from \"react-router-dom\";\n\nfunction HW5() {\n    return (\n        <div>\n            {/*в gh-pages лучше работает HashRouter*/}\n            <HashRouter>\n\n            <Header/>\n\n            <Routes/>\n\n            </HashRouter>\n        </div>\n    );\n}\n\nexport default HW5;\n","import React from \"react\";\nimport s from \"./App.module.css\";\nimport HW5 from \"../../../p2-homeworks/h5/HW5\";\n\nfunction App() {\n    return (\n        <div className={s.App}>\n            <div>react homeworks:</div>\n            {/*<HW1/>*/}\n            {/*<HW2/>*/}\n            {/*<HW3/>*/}\n            {/*<HW4/>*/}\n            <HW5/>\n\n        </div>\n    );\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\ntype Config = {\n  onSuccess?: (registration: ServiceWorkerRegistration) => void;\n  onUpdate?: (registration: ServiceWorkerRegistration) => void;\n};\n\nexport function register(config?: Config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(\n      process.env.PUBLIC_URL,\n      window.location.href\n    );\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl: string, config?: Config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl: string, config?: Config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' }\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport \"./index.css\";\nimport App from \"./p1-main/m1-ui/u1-app/App\";\nimport * as serviceWorker from \"./serviceWorker\";\n\nReactDOM.render(\n    <React.StrictMode>\n        <App/>\n    </React.StrictMode>,\n    document.getElementById(\"root\")\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n","// extracted by mini-css-extract-plugin\nmodule.exports = {\"superInput\":\"SuperInputText_superInput__11CgE\",\"errorInput\":\"SuperInputText_errorInput__20bgj\",\"error\":\"SuperInputText_error__6XYFv\",\"inp\":\"SuperInputText_inp__3MCJY\",\"label\":\"SuperInputText_label__43wzY\",\"focusBg\":\"SuperInputText_focusBg__HpNEP\",\"errorL\":\"SuperInputText_errorL__3aRVl\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"container\":\"Message_container__3YFks\",\"name\":\"Message_name__3Tp99\",\"messageBlue\":\"Message_messageBlue__1q8g5\",\"message-orange\":\"Message_message-orange__zLMo7\",\"messageContent\":\"Message_messageContent__3ned-\",\"messageTimestampRight\":\"Message_messageTimestampRight__vhStU\",\"message-timestamp-left\":\"Message_message-timestamp-left__2jqis\"};"],"sourceRoot":""}